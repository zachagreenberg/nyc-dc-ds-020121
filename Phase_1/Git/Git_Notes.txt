Notes on Git/GitHub:
-PULL is taking from Github
-PUSH is putting in Github
-Git is your local computer
-PULL goes to workspace(ie your computer)
-FETCH goes to repository
-when you PULL UPSTREAM it takes it from the ORIGINAL repository
-ADD —> COMMIT —> PUSH (to Github)
-GIT RESET cancels your add
-GIT STATUS checks adds
-master is now called main
-branches: GIT CHECKOUT -b makes and switch
	       GIT BRANCH -d name deletes
-GIT STASH hides your work from git status
-local is thru command and remote is on GitHub
-GIT INIT creates repository on local
-GIT REMOTE add <url> to move it to GitHub
-git merge <branch> merges your branches
    
WATCH THIS VIDEO TO EXPLAIN THE BRANCH WORKFLOW:
    https://www.youtube.com/watch?v=oFYyTZwMyAg
        
        
GIT BRANCHING LECTURE NOTES:
    Pull Requests - 'Hey I made these changes, we should all pull copys down'
        can from there delete branches
        after a pull request is done, make sure you pull to your local!
    
    When pushing up to the github do git push -u origin <branch>
    
    You can physically resolve merge conflicts on GitHub. the '===' separates the conflicts
    
    gitscm.com
    
    git rebase
         A---B---C topic                     A---B---C topic 
         /                                  /
    D---E---F---G master           D---E---F---G master